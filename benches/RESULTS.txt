NOTE: This are results on **MY** pc, which WILL be different on different PCs.
This file only exists to compare, and not to be used as definitive results.

NOTE: Also, this wasn't executed on proper benching setups. I was listening to music,
had a few tabs open, was running a few other programs and had a few other things running in the background.

Do NOT take these results as trustable.

PC specs:

distro ⏹ Arch Linux (x86_64)
kernel ⏹ 6.6.1-arch1-1
memory ⏹ 8GB
cpu ⏹ AMD Ryzen 5 2600 Six-Core Processor

---------------

REQUEST PARSING (Fri Nov 17 06:25:00 PM CET 2023)
Current: 285ns
W/String::from_utf8_unchecked: 278.84ns (+ `bytes` cloning in bench)
W/Custom byte slicing + utf8 on specific places: 284.12 (+ `bytes` cloning in bench)

7ns difference (7 * 10^-9) seconds between the 2 new options, which are still faster than the current one.

---------------

URL PARSING (Fri Nov 17 06:40:43 PM CET 2023)

Parsing urls is a bit slower than expected, probably due to splitting by `/`, `?`, `&` and `=`.

Complex url tested: /path/to/something?param1=value1&param2=value2&param3=value3&s=& - ~400ns (0.4µs)
Simple url tested: /a/b?c=d - ~140ns
Base url tested: / - ~30ns

---------------

REQUEST PARSING (Tue Dec 26 11:56 AM CET 2023)

before:
time:   [293.92 ns 295.88 ns 297.98 ns]

after:
time:   [236.59 ns 237.49 ns 238.45 ns]
change: [-19.721% -19.068% -18.434%]

after (fixed):

time:   [302.88 ns 307.47 ns 312.76 ns]
change: [+25.950% +27.266% +28.833%]

after (v2):

time:   [291.43 ns 293.19 ns 295.22 ns] ~ around the same time as before
